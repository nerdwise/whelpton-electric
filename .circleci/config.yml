version: 2

node_version: &node_version
  name: Node Version
  command: node -v > node_version.txt

cache_restore: &cache_restore
  keys:
  - &cache_key grow-cache-{{ .Branch }}-{{ checksum "package.json" }}-{{ checksum "node_version.txt" }}

cache_save: &cache_save
  key: *cache_key
  paths:
  - extensions
  - node_modules

grow_install: &grow_install
  name: Grow Intall
  command: grow install

base_deploy: &base_deploy
  working_directory: ~/grow
  docker:
  - image: grow/base:latest

firebase_deploy: &firebase_deploy
  name: Deploy to Firebase
  command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_DEPLOY_TOKEN

jobs:
  stage:
    <<: *base_deploy
    steps:
    - checkout
    - run: *node_version
    - restore_cache: *cache_restore
    - run: *grow_install
    - save_cache: *cache_save
    - run:
        name: Stage Firebase
        command: make build-staging
    - run:
        name: Use Staging Firebase config
        command: ./node_modules/.bin/firebase use staging --token=$FIREBASE_DEPLOY_TOKEN
    - run: *firebase_deploy

  deploy:
    <<: *base_deploy
    steps:
    - checkout
    - run: *node_version
    - restore_cache: *cache_restore
    - run: *grow_install
    - save_cache: *cache_save
    - run:
        name: Deploy Firebase
        command: make build-prod
    - run:
        name: Use Production Firebase config
        command: ./node_modules/.bin/firebase use prod --token=$FIREBASE_DEPLOY_TOKEN
    - run: *firebase_deploy

workflows:
  version: 2
  build:
    jobs:
    - stage:
        filters:
          branches:
            only:
            - staging
    - deploy:
        filters:
          branches:
            only:
            - master
  weekly:
    triggers:
    - schedule:
        cron: "0 0 * * 0"
        filters:
          branches:
            only:
            - master
    jobs:
      - deploy

